// 语言包类型定义
export interface LocaleText {
  [key: string]: string | LocaleText;
}

export interface FlyCutCaptionLocale {
  common: {
    loading: string;
    error: string;
    success: string;
    confirm: string;
    cancel: string;
    ok: string;
    close: string;
    save: string;
    delete: string;
    edit: string;
    preview: string;
    export: string;
    import: string;
    reset: string;
    apply: string;
    search: string;
    clear: string;
    select: string;
    upload: string;
    download: string;
    retry: string;
    back: string;
    next: string;
    previous: string;
    finish: string;
    skip: string;
    enable: string;
    disable: string;
    play: string;
    pause: string;
    stop: string;
    mute: string;
    unmute: string;
    fullscreen: string;
    exitFullscreen: string;
  };
  components: {
    fileUpload: {
      dragDropText: string;
      clickToSelect: string;
      supportedFormats: string;
      maxFileSize: string;
      selectFile: string;
      invalidFileType: string;
      fileTooLarge: string;
      uploadFailed: string;
      uploadSuccess: string;
      processing: string;
      noFileSelected: string;
      fileInfo: string;
      fileName: string;
      fileSize: string;
      fileType: string;
      duration: string;
    };
    videoPlayer: {
      play: string;
      pause: string;
      stop: string;
      mute: string;
      unmute: string;
      fullscreen: string;
      exitFullscreen: string;
      volume: string;
      currentTime: string;
      duration: string;
      playbackRate: string;
      quality: string;
      subtitle: string;
      showSubtitle: string;
      hideSubtitle: string;
      previousFrame: string;
      nextFrame: string;
      skipBackward: string;
      skipForward: string;
    };
    subtitleEditor: {
      title: string;
      addSubtitle: string;
      editSubtitle: string;
      deleteSubtitle: string;
      deleteSelected: string;
      selectAll: string;
      deselectAll: string;
      mergeSubtitles: string;
      splitSubtitle: string;
      adjustTiming: string;
      startTime: string;
      endTime: string;
      text: string;
      duration: string;
      timeline: string;
      waveform: string;
      zoomIn: string;
      zoomOut: string;
      fitToScreen: string;
      showWaveform: string;
      hideWaveform: string;
      playSelection: string;
      clearSelection: string;
      undoDelete: string;
      redoDelete: string;
      searchSubtitle: string;
      replaceText: string;
      translateSubtitle: string;
      exportSRT: string;
      exportVTT: string;
      exportJSON: string;
      importSRT: string;
      importVTT: string;
      importJSON: string;
      previewSubtitle: string;
      subtitleStyle: string;
      fontSize: string;
      fontColor: string;
      backgroundColor: string;
      outline: string;
      shadow: string;
      position: string;
      alignment: string;
    };
    asrPanel: {
      title: string;
      startASR: string;
      stopASR: string;
      pauseASR: string;
      resumeASR: string;
      progress: string;
      status: string;
      modelLoading: string;
      modelLoaded: string;
      processing: string;
      completed: string;
      failed: string;
      cancelled: string;
      language: string;
      autoDetect: string;
      whisperModel: string;
      generateWordTimestamps: string;
      enableVAD: string;
      vadThreshold: string;
      maxSegmentLength: string;
      temperature: string;
      beamSize: string;
      patience: string;
      lengthPenalty: string;
      repetitionPenalty: string;
      noRepeatNgramSize: string;
      initialPrompt: string;
      suppressBlank: string;
      suppressTokens: string;
      withoutTimestamps: string;
      maxInitialTimestamp: string;
      wordTimestamps: string;
      prependPunctuations: string;
      appendPunctuations: string;
      lastTokensToIgnore: string;
      modelSettings: string;
      advancedSettings: string;
      resetSettings: string;
      saveSettings: string;
      loadSettings: string;
    };
    exportDialog: {
      title: string;
      format: string;
      quality: string;
      resolution: string;
      frameRate: string;
      bitrate: string;
      codec: string;
      container: string;
      includeAudio: string;
      audioCodec: string;
      audioBitrate: string;
      audioSampleRate: string;
      includeSubtitle: string;
      burnSubtitle: string;
      subtitleTrack: string;
      outputFile: string;
      exportVideo: string;
      exportAudio: string;
      exportSubtitle: string;
      exportAll: string;
      previewExport: string;
      exportProgress: string;
      exportSuccess: string;
      exportFailed: string;
      exportCancelled: string;
      estimatedSize: string;
      estimatedTime: string;
    };
    messageCenter: {
      title: string;
      noMessages: string;
      clearAll: string;
      markAllRead: string;
      filter: string;
      allMessages: string;
      errors: string;
      warnings: string;
      info: string;
      success: string;
      timestamp: string;
      details: string;
      dismiss: string;
      retry: string;
      report: string;
    };
    themeToggle: {
      light: string;
      dark: string;
      auto: string;
      toggleTheme: string;
    };
    languageSelector: {
      language: string;
      selectLanguage: string;
      chinese: string;
      english: string;
      japanese: string;
      korean: string;
      french: string;
      german: string;
      spanish: string;
      portuguese: string;
      russian: string;
      arabic: string;
      hindi: string;
    };
  };
  messages: {
    fileUpload: {
      selectFile: string;
      uploadInProgress: string;
      uploadSuccess: string;
      uploadFailed: string;
      invalidFileType: string;
      fileTooLarge: string;
      networkError: string;
      serverError: string;
      processingFile: string;
      extractingAudio: string;
      analyzingAudio: string;
      generatingSubtitles: string;
      processingComplete: string;
      processingFailed: string;
      processingCancelled: string;
    };
    asr: {
      modelDownloading: string;
      modelDownloaded: string;
      modelDownloadFailed: string;
      initializingModel: string;
      modelInitialized: string;
      modelInitializationFailed: string;
      asrStarted: string;
      asrProgress: string;
      asrCompleted: string;
      asrFailed: string;
      asrCancelled: string;
      noAudioDetected: string;
      audioTooShort: string;
      audioTooLong: string;
      unsupportedAudioFormat: string;
      insufficientMemory: string;
      networkTimeout: string;
    };
    export: {
      exportStarted: string;
      exportProgress: string;
      exportCompleted: string;
      exportFailed: string;
      exportCancelled: string;
      invalidParameters: string;
      insufficientSpace: string;
      encodingError: string;
      ioError: string;
      permissionDenied: string;
    };
    subtitle: {
      subtitleAdded: string;
      subtitleEdited: string;
      subtitleDeleted: string;
      subtitlesMerged: string;
      subtitleSplit: string;
      timingAdjusted: string;
      textReplaced: string;
      subtitleTranslated: string;
      invalidTimeRange: string;
      overlappingSubtitles: string;
      emptySubtitleText: string;
      maxSubtitlesReached: string;
      undoLimit: string;
      redoLimit: string;
    };
    video: {
      videoLoaded: string;
      videoLoadFailed: string;
      seekCompleted: string;
      playbackError: string;
      networkError: string;
      decodingError: string;
      unsupportedFormat: string;
      videoTooLarge: string;
      videoTooLong: string;
      audioTrackMissing: string;
      videoTrackMissing: string;
    };
    general: {
      operationSuccess: string;
      operationFailed: string;
      operationCancelled: string;
      saveSuccess: string;
      saveFailed: string;
      loadSuccess: string;
      loadFailed: string;
      deleteSuccess: string;
      deleteFailed: string;
      copySuccess: string;
      copyFailed: string;
      pasteSuccess: string;
      pasteFailed: string;
      connectionLost: string;
      connectionRestored: string;
      sessionExpired: string;
      accessDenied: string;
      rateLimitExceeded: string;
      serviceUnavailable: string;
      maintenanceMode: string;
      updateAvailable: string;
      updateRequired: string;
      compatibilityIssue: string;
      browserNotSupported: string;
      featureNotSupported: string;
      experimentalFeature: string;
    };
  };
}

// 默认语言包（中文）
export const defaultLocale: FlyCutCaptionLocale = {
  common: {
    loading: '加载中...',
    error: '错误',
    success: '成功',
    confirm: '确认',
    cancel: '取消',
    ok: '确定',
    close: '关闭',
    save: '保存',
    delete: '删除',
    edit: '编辑',
    preview: '预览',
    export: '导出',
    import: '导入',
    reset: '重置',
    apply: '应用',
    search: '搜索',
    clear: '清除',
    select: '选择',
    upload: '上传',
    download: '下载',
    retry: '重试',
    back: '返回',
    next: '下一步',
    previous: '上一步',
    finish: '完成',
    skip: '跳过',
    enable: '启用',
    disable: '禁用',
    play: '播放',
    pause: '暂停',
    stop: '停止',
    mute: '静音',
    unmute: '取消静音',
    fullscreen: '全屏',
    exitFullscreen: '退出全屏',
  },
  components: {
    fileUpload: {
      dragDropText: '拖拽视频文件到这里，或点击选择',
      clickToSelect: '点击选择文件',
      supportedFormats: '支持的格式：',
      maxFileSize: '最大文件大小：',
      selectFile: '选择文件',
      invalidFileType: '不支持的文件类型',
      fileTooLarge: '文件太大',
      uploadFailed: '上传失败',
      uploadSuccess: '上传成功',
      processing: '处理中...',
      noFileSelected: '未选择文件',
      fileInfo: '文件信息',
      fileName: '文件名',
      fileSize: '文件大小',
      fileType: '文件类型',
      duration: '时长',
    },
    videoPlayer: {
      play: '播放',
      pause: '暂停',
      stop: '停止',
      mute: '静音',
      unmute: '取消静音',
      fullscreen: '全屏',
      exitFullscreen: '退出全屏',
      volume: '音量',
      currentTime: '当前时间',
      duration: '总时长',
      playbackRate: '播放速度',
      quality: '画质',
      subtitle: '字幕',
      showSubtitle: '显示字幕',
      hideSubtitle: '隐藏字幕',
      previousFrame: '上一帧',
      nextFrame: '下一帧',
      skipBackward: '快退',
      skipForward: '快进',
    },
    subtitleEditor: {
      title: '字幕编辑器',
      addSubtitle: '添加字幕',
      editSubtitle: '编辑字幕',
      deleteSubtitle: '删除字幕',
      deleteSelected: '删除选中',
      selectAll: '全选',
      deselectAll: '取消全选',
      mergeSubtitles: '合并字幕',
      splitSubtitle: '拆分字幕',
      adjustTiming: '调整时间',
      startTime: '开始时间',
      endTime: '结束时间',
      text: '文本',
      duration: '时长',
      timeline: '时间轴',
      waveform: '波形图',
      zoomIn: '放大',
      zoomOut: '缩小',
      fitToScreen: '适应屏幕',
      showWaveform: '显示波形',
      hideWaveform: '隐藏波形',
      playSelection: '播放选中',
      clearSelection: '清除选择',
      undoDelete: '撤销删除',
      redoDelete: '重做删除',
      searchSubtitle: '搜索字幕',
      replaceText: '替换文本',
      translateSubtitle: '翻译字幕',
      exportSRT: '导出 SRT',
      exportVTT: '导出 VTT',
      exportJSON: '导出 JSON',
      importSRT: '导入 SRT',
      importVTT: '导入 VTT',
      importJSON: '导入 JSON',
      previewSubtitle: '预览字幕',
      subtitleStyle: '字幕样式',
      fontSize: '字体大小',
      fontColor: '字体颜色',
      backgroundColor: '背景颜色',
      outline: '描边',
      shadow: '阴影',
      position: '位置',
      alignment: '对齐方式',
    },
    asrPanel: {
      title: '语音识别',
      startASR: '开始识别',
      stopASR: '停止识别',
      pauseASR: '暂停识别',
      resumeASR: '继续识别',
      progress: '进度',
      status: '状态',
      modelLoading: '模型加载中',
      modelLoaded: '模型已加载',
      processing: '处理中',
      completed: '已完成',
      failed: '失败',
      cancelled: '已取消',
      language: '语言',
      autoDetect: '自动检测',
      whisperModel: 'Whisper 模型',
      generateWordTimestamps: '生成词级时间戳',
      enableVAD: '启用语音活动检测',
      vadThreshold: 'VAD 阈值',
      maxSegmentLength: '最大段落长度',
      temperature: '温度',
      beamSize: '束搜索大小',
      patience: '耐心度',
      lengthPenalty: '长度惩罚',
      repetitionPenalty: '重复惩罚',
      noRepeatNgramSize: '无重复 N-gram 大小',
      initialPrompt: '初始提示',
      suppressBlank: '抑制空白',
      suppressTokens: '抑制标记',
      withoutTimestamps: '无时间戳',
      maxInitialTimestamp: '最大初始时间戳',
      wordTimestamps: '词级时间戳',
      prependPunctuations: '前置标点符号',
      appendPunctuations: '后置标点符号',
      lastTokensToIgnore: '忽略的最后标记',
      modelSettings: '模型设置',
      advancedSettings: '高级设置',
      resetSettings: '重置设置',
      saveSettings: '保存设置',
      loadSettings: '加载设置',
    },
    exportDialog: {
      title: '导出设置',
      format: '格式',
      quality: '质量',
      resolution: '分辨率',
      frameRate: '帧率',
      bitrate: '比特率',
      codec: '编码器',
      container: '容器',
      includeAudio: '包含音频',
      audioCodec: '音频编码器',
      audioBitrate: '音频比特率',
      audioSampleRate: '音频采样率',
      includeSubtitle: '包含字幕',
      burnSubtitle: '烧录字幕',
      subtitleTrack: '字幕轨道',
      outputFile: '输出文件',
      exportVideo: '导出视频',
      exportAudio: '导出音频',
      exportSubtitle: '导出字幕',
      exportAll: '导出全部',
      previewExport: '预览导出',
      exportProgress: '导出进度',
      exportSuccess: '导出成功',
      exportFailed: '导出失败',
      exportCancelled: '导出已取消',
      estimatedSize: '预计大小',
      estimatedTime: '预计时间',
    },
    messageCenter: {
      title: '消息中心',
      noMessages: '暂无消息',
      clearAll: '清除全部',
      markAllRead: '标记全部已读',
      filter: '筛选',
      allMessages: '全部消息',
      errors: '错误',
      warnings: '警告',
      info: '信息',
      success: '成功',
      timestamp: '时间',
      details: '详情',
      dismiss: '忽略',
      retry: '重试',
      report: '报告',
    },
    themeToggle: {
      light: '浅色',
      dark: '深色',
      auto: '自动',
      toggleTheme: '切换主题',
    },
    languageSelector: {
      language: '语言',
      selectLanguage: '选择语言',
      chinese: '中文',
      english: 'English',
      japanese: '日本語',
      korean: '한국어',
      french: 'Français',
      german: 'Deutsch',
      spanish: 'Español',
      portuguese: 'Português',
      russian: 'Русский',
      arabic: 'العربية',
      hindi: 'हिन्दी',
    },
  },
  messages: {
    fileUpload: {
      selectFile: '请选择文件',
      uploadInProgress: '文件上传中...',
      uploadSuccess: '文件上传成功',
      uploadFailed: '文件上传失败',
      invalidFileType: '不支持的文件类型',
      fileTooLarge: '文件大小超出限制',
      networkError: '网络错误，请检查网络连接',
      serverError: '服务器错误，请稍后重试',
      processingFile: '正在处理文件...',
      extractingAudio: '正在提取音频...',
      analyzingAudio: '正在分析音频...',
      generatingSubtitles: '正在生成字幕...',
      processingComplete: '文件处理完成',
      processingFailed: '文件处理失败',
      processingCancelled: '文件处理已取消',
    },
    asr: {
      modelDownloading: '正在下载语音识别模型...',
      modelDownloaded: '语音识别模型下载完成',
      modelDownloadFailed: '语音识别模型下载失败',
      initializingModel: '正在初始化语音识别模型...',
      modelInitialized: '语音识别模型初始化完成',
      modelInitializationFailed: '语音识别模型初始化失败',
      asrStarted: '语音识别已开始',
      asrProgress: '语音识别进度',
      asrCompleted: '语音识别完成',
      asrFailed: '语音识别失败',
      asrCancelled: '语音识别已取消',
      noAudioDetected: '未检测到音频信号',
      audioTooShort: '音频时长过短',
      audioTooLong: '音频时长过长',
      unsupportedAudioFormat: '不支持的音频格式',
      insufficientMemory: '内存不足',
      networkTimeout: '网络超时',
    },
    export: {
      exportStarted: '导出已开始',
      exportProgress: '导出进度',
      exportCompleted: '导出完成',
      exportFailed: '导出失败',
      exportCancelled: '导出已取消',
      invalidParameters: '导出参数无效',
      insufficientSpace: '磁盘空间不足',
      encodingError: '编码错误',
      ioError: '输入输出错误',
      permissionDenied: '权限被拒绝',
    },
    subtitle: {
      subtitleAdded: '字幕已添加',
      subtitleEdited: '字幕已编辑',
      subtitleDeleted: '字幕已删除',
      subtitlesMerged: '字幕已合并',
      subtitleSplit: '字幕已拆分',
      timingAdjusted: '时间已调整',
      textReplaced: '文本已替换',
      subtitleTranslated: '字幕已翻译',
      invalidTimeRange: '无效的时间范围',
      overlappingSubtitles: '字幕时间重叠',
      emptySubtitleText: '字幕文本为空',
      maxSubtitlesReached: '已达到最大字幕数量',
      undoLimit: '已达到撤销限制',
      redoLimit: '已达到重做限制',
    },
    video: {
      videoLoaded: '视频加载完成',
      videoLoadFailed: '视频加载失败',
      seekCompleted: '跳转完成',
      playbackError: '播放错误',
      networkError: '网络错误',
      decodingError: '解码错误',
      unsupportedFormat: '不支持的格式',
      videoTooLarge: '视频文件过大',
      videoTooLong: '视频时长过长',
      audioTrackMissing: '缺少音频轨道',
      videoTrackMissing: '缺少视频轨道',
    },
    general: {
      operationSuccess: '操作成功',
      operationFailed: '操作失败',
      operationCancelled: '操作已取消',
      saveSuccess: '保存成功',
      saveFailed: '保存失败',
      loadSuccess: '加载成功',
      loadFailed: '加载失败',
      deleteSuccess: '删除成功',
      deleteFailed: '删除失败',
      copySuccess: '复制成功',
      copyFailed: '复制失败',
      pasteSuccess: '粘贴成功',
      pasteFailed: '粘贴失败',
      connectionLost: '连接丢失',
      connectionRestored: '连接已恢复',
      sessionExpired: '会话已过期',
      accessDenied: '访问被拒绝',
      rateLimitExceeded: '请求频率超限',
      serviceUnavailable: '服务不可用',
      maintenanceMode: '维护模式',
      updateAvailable: '有可用更新',
      updateRequired: '需要更新',
      compatibilityIssue: '兼容性问题',
      browserNotSupported: '浏览器不支持',
      featureNotSupported: '功能不支持',
      experimentalFeature: '实验性功能',
    },
  },
};